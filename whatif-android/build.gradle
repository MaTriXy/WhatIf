apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'org.jetbrains.dokka'
apply from: '../dependencies.gradle'

android {
  compileSdkVersion versions.compileSdk
  defaultConfig {
    minSdkVersion versions.minSdkLib
    targetSdkVersion versions.compileSdk
    versionCode versions.versionCode
    versionName versions.versionName
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
  }
  testOptions {
    unitTests {
      includeAndroidResources = true
    }
  }
}

ext.repository = [
    name       : "whatif-android",
    description: "WhatIf is kotlin extensions for expressing a single if-else statement, nullable and boolean.",
    websiteUrl : "https://github.com/skydoves/WhatIf",
    scm        : 'scm:git@github.com/skydoves/WhatIf.git'
]

afterEvaluate {
  publishing {
    publications {
      releaseWhatIf(MavenPublication) {
        from components.release

        group = "com.github.skydoves"
        artifactId = repository.name
        version = versions.versionName

        artifact androidJavadocsJar
        artifact(sourceJar)

        pom {
          name = repository.name
          description = repository.description
          url = repository.websiteUrl
          licenses {
            license {
              name = "The Apache License, Version 2.0"
              url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
            }
          }
          developers {
            developer {
              id = "skydoves"
              name = "Jaewoong Eum"
            }
          }
          scm {
            connection = repository.scm
            developerConnection = repository.scm
            url = repository.websiteUrl
          }
        }
      }
    }
  }
}

kotlin {
  explicitApi()
}

dependencies {
  api project(":whatif")

  implementation "androidx.appcompat:appcompat:$versions.androidxAppcompat"
  testImplementation "junit:junit:$versions.junit"
  testImplementation "org.robolectric:robolectric:$versions.robolectric"
}

dokka {
  outputFormat = 'html'
  outputDirectory = "$buildDir/javadoc"
  configuration {
    moduleName = 'whatif'
  }
}

tasks.withType(Javadoc) {
  excludes = ['**/*.kt']
  options.addBooleanOption('Xdoclint:none', true)
}

task sourceJar(type: Jar) {
  from android.sourceSets.main.java.srcDirs
  classifier "sources"
}

task androidJavadocs(type: Javadoc) {
  source = android.sourceSets.main.java.srcDirs
  classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
  android.libraryVariants.all { variant ->
    if (variant.name == 'release') {
      owner.classpath += variant.javaCompileProvider.get().classpath
    }
  }
  exclude '**/R.html', '**/R.*.html', '**/index.html'
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
  archiveClassifier.set('javadoc')
  from androidJavadocs.destinationDir
}

apply from: '../spotless.gradle'
apply from: '../publish.gradle'